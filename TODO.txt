Consider contributing to CubesViewer! This is a possible roadmap (reverse order).

[ROADMAP]

    * Support multiple servers and multiple versions (use adaptors, and own data dictionary).

    * Translation site / tool / ask for help.
    * Interface available in English and one more language.
    * Implement i18n.
    * Bring back locale support!

    * Support more authentication scenarios for embedded views / IFRAME,
      via CubesViewer server app (note upcoming Cubes auth framework).
    * App support for IFRAME embedding.
    * GUI support for browser back button, correct URL usage, links to GUI.

    * Support dimension attributes, and fact details in fact view etc..
    * Support better exploration of facts

    * GUI options (and all other plugin options) now as cubesviewer options
      (with plugin namespace?).
    * Hide interface mode (also, make these programmable options for the views)
    * Fix too many series in legend issue (limit? alternate legend?).
    * Avoid leaving the page inadvertedely (also make back/forward/url_links work?)
    * Jump to added view when creating a view (also make back/forward/url_links work?)

    * Separate in directives appropriately, restore "puggability", move cube "globals" to directive scopes.

    * Add anonymous-save service to backend and client (dedup).
    * Print feature (open tables and charts with appropriate height/width, hide most interface buttons).

    * X/Y/size bubble charts.
    * 3rd dimension scrollbar and play mode (for charts and series)
    * Time filter dynamic (zoomable, etc) when is horizontal dimension in appropriate chart mode (nvd3 does this ootb)
    * Make charts more interactive (allow cut from chart, etc).

    * Series annotation system: markers for annotations in time or other dimension.
    * Better loading bar (account for pending requests, etc).
    * Default cube settings (cv-info) feature bug? it should only be applied if the view is not otherwise configured (ie loaded or json). Check.

    * Architecture improvements:
        * Abstract backend?? Create CV objects for dimensions, levels, etc... Plug cubes as one more adaptor???
        * Divide in reusable angular directives (ie. start with fact viewer). JS doc. Make views
          proper objects.
        * Move to a more object oriented API, directives for widgets for model and cubeview.
          Keep drilldown and cuts as objects in API, serialize only as
          needed (and so introduce the ability optionally include column widths, etc).
        * Abstract data/grid in cubeview? -> Add own data dictionary (<->CubETL).
        * (Use controllerAs).
        * Make cubesviewer-studio an angular app.

    * Save filters (segments). Info pieces shall be made directives first.

[2.4]

    * Data alerts (server-backed, depending on criteria, with triggers (use cubetl?)).
    * http://bl.ocks.org/mbostock/4063269 (Bubble chart: categories/sizes)
    * https://mbostock.github.io/d3/talk/20111018/treemap.html (zoomable treemap)

[2.3]

    * Fulltext search (facts, dimension values/info, extra external data (refs), metadata) ?

    * Filter from chart filter / synchronize filter and chart filter (?)
    * Synchronize view to other view (one way/two way, attributes to synchronize)

[2.2]

    * Info metadata (html/url), etc...
    * Django views admin -> include CubesViewer
    * Scroll to recently open view on GUI (also provide function to do it from code for standalone views).
    * Fact Viewer and fact templates (html/url/angular template?), i.e. including links to documents or etc...
    * Data formatters (color, decimals, abbreviations, units, etc...). Allow client side changes?
    * Implement limits to items shown in charts or dimension filters...?
    * Show filter icon from "horizontal dimension". Also show its detail level (and perhaps not the hierarchy).
    * Abandon page warning?
    * Datepicker to show only to correct level (year, month, day)
    * Try reoder columns + pin columns again
    * Add fullscreen mode for a view (in this case, stretch grid and chart as appropriate?)
    * Drop notes system 2: use metadata for info and add a comments system
    * Allow direct link to URL (cubesviewer GUI reading configuration/anonymous-id from URL)
    * Drill more/drill less. Same for horizontal dimension, and dimension filter (???)
    * Reviewed and improved doc (JSDoc).

[2.1]

    * Site, demos and data:
        * Update screenshots showing map chart (ie from views.html).
        * Create views.html page for site, showing a full story w/ source code ("start with a blank cube", "exploration", "series", "chart", "map"...)
        * Site (second iteration). Show a couple of charts view, a table, and an enabled-controls view.
          SAME views to be automatically opened in the explorer sample.
        * Add product subcategory to demo data. Add some formatters (correctly from dims via CubeETL).
        * Update & simplify demo views JSON.
        * Review site and doc links.
        * Mention Python, jQuery+Angular, database agnostic / systems


    * Chart series view/hide selection is serialized using label instead of key. Normalize.
    * Issue #55 (chart shows measure name, not measure label).
    * Fix submenu timer hack: is causing issues already. Watch contents and perhaps debounce menu activation?

    * Add "accumulated", "difference" and other operations to series and charts.
    * Add "grouping", allowing to group drilled down items (custom groups) using an aggregation of choice...
      Ability to save groups.
    * Add "reduce to N items" operation on series (allows to represent charts adding "Others" for the rest),
      reducing using some criteria -> uses grouping.
    * Finish calculations: show infos, mark which ones are enabled, order, add series colorize (positive/negative) | move "invert 2nd serie -> mirror 2nd serie" as a calculation?
    * Operations. Design. Possible error: operations shall be applied after series but before flatennign cols for charts. Ensure this is correct.

    * Restore cached content notice (is missing, commented out).
    * Automatically hide legend if too many results.
    * Colors get incorrectly drawn when series are deselected from legend, and view changed back/forth.
    * Cleanup charts, destroy events, resize handlers (use a single resize event across views, and bind from angular).

    * Comments system.

    * Range filter.
    * Flag icons support OOTB.
    * Map charts. Design already available.

[2.0.2]

    * Remove -devel from version, -beta from doc, generate files, copy to web and server, same on server.
      Release notes, Tag repo (release), Announcement, Move this todo item to next release top.
    * Cleanup code.
    * Test and close issue #39, "strings with hyphen cause dimension filter to work inexpectedly" as shall be fixed.
    * _Firefox_ menu wrap in Studio menu (not in Chrome nor View menu?)
    * Submenu loading issue.

    * Select next drill level (if available) when filtering by clicking on a single selection in explore mode.
    * Add "plus / minus" signs to dimension filters and drilldown/horizontal when more than one level.
    * Tooltip columns: column=val remove columnTooltipAttr, enable tooltips?
    * Regression: tooltips (column label = formatted value), and row highlighting. Also row selection odd/even issue.
    * 2 columns issue: use masonry. Column / row / subview management needs re-thinking (subcontainer?).

    * Fix: toggling legend does not redraw chart (just moves legend?). Redrawing the chart (ie switching view mode) actually works.
      Same for sometimes drilling down or changing a filter, grid doens't get correct size.
    * Size change when switching views is very irritating. Hack that (fix height during changes/reloads?). Also loading bar.
    * Possible repeated data load / events?
    * Refresh: use watches to trigger invalidation? (also check for repeated events).

